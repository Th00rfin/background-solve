app.jsx
import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet } from 'react-native';

// useState kung ready ba or d pa ready
const [isReady, isetAsReady] = useState(false);
// gamit useEfftct para sa time 
useEffect ( () =>{
  const delay = 3000;
  const timeOut = setTimeout ( () =>{
}, delay)
return () => clearTimeout(timeOut);
}, []);
// tas if ung !ready return ung home in a may parang katulad nung insta pero components sya.
if(! isReady) {
return (
<opening/>
)
}
try and catch lalagay ko sa finally ung return  itong tabs
// itas if ready so return ung tabs na
return (
<Stack.screen name="(tabs)"  />
)


components/opening.jsx
import {View, Image, StyleSheet}

const opening = (() =>{
  return (
)
});







loader.jsx






import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet } from 'react-native';

const App = () => {
  const [ellipsis, setEllipsis] = useState('');

  useEffect(() => {
    const interval = setInterval(() => {
      setEllipsis(prev => (prev.length < 3 ? prev + "." : ''));
    }, 500);

    return () => clearInterval(interval);
  }, []);

  return (
    <View style={styles.container}>
      <Text style={styles.loadingText}>Loading{ellipsis}</Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  loadingText: {
    fontSize: 24,
  },
});

export default App;



pano implement ung sa loading muna so gantu 

if ready na ung app render ung image
so
const [isReady, setIsReady] = useState(false);
useEffect = () =>{
 
}  
if(!isReady){
return ( ung image with loading)
}
if(isReady === true){
setIsReady()
}
return ( appp);